import React, { useState } from 'react';
import { motion } from 'framer-motion';
import { Helmet } from 'react-helmet';
import { User, Calendar, TrendingUp, LogOut, Settings } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import { Avatar } from '@/components/ui/avatar';
import { toast } from '@/components/ui/use-toast';
import { useJournal } from '@/contexts/JournalContext';
import MoodChart from '@/components/MoodChart.jsx';
import LoginModal from '@/components/LoginModal.jsx';

const Profile = () => {
  const { currentUser, getUserEntries, logout } = useJournal();
  const [showLoginModal, setShowLoginModal] = useState(false);

  if (!currentUser) {
    return (
      <div className="min-h-full bg-gradient-to-br from-slate-50 to-blue-50 dark:from-slate-900 dark:to-slate-800">
        <Helmet>
          <title>–ü—Ä–æ—Ñ–∏–ª—å - Moy-Den</title>
        </Helmet>
        
        <div className="max-w-2xl mx-auto px-4 py-16">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            className="text-center"
          >
            <Card className="p-8 glass-effect rounded-2xl">
              <User className="w-16 h-16 mx-auto mb-4 text-muted-foreground" />
              <h1 className="text-2xl font-bold mb-4">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</h1>
              <p className="text-muted-foreground mb-6">
                –í–æ–π–¥–∏ –≤ —Å–∏—Å—Ç–µ–º—É, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
              </p>
              <Button onClick={() => setShowLoginModal(true)} className="rounded-full">
                –í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É
              </Button>
            </Card>
          </motion.div>
        </div>

        <LoginModal 
          isOpen={showLoginModal} 
          onClose={() => setShowLoginModal(false)} 
        />
      </div>
    );
  }

  const userEntries = getUserEntries();
  const totalEntries = userEntries.length;
  const averageMood = totalEntries > 0 
    ? (userEntries.reduce((sum, entry) => sum + entry.mood[0], 0) / totalEntries).toFixed(1)
    : 0;

  const handleLogout = () => {
    logout();
    toast({
      title: "–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! üëã",
      description: "–¢—ã —É—Å–ø–µ—à–Ω–æ –≤—ã—à–µ–ª –∏–∑ —Å–∏—Å—Ç–µ–º—ã"
    });
  };

  const handleFeatureClick = (feature) => {
    toast({
      title: "üöß –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞",
      description: "–ù–æ –Ω–µ –≤–æ–ª–Ω—É–π—Å—è! –¢—ã –º–æ–∂–µ—à—å –∑–∞–ø—Ä–æ—Å–∏—Ç—å –µ—ë –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏! üöÄ"
    });
  };

  return (
    <div className="min-h-full bg-gradient-to-br from-slate-50 to-blue-50 dark:from-slate-900 dark:to-slate-800">
      <Helmet>
        <title>–ü—Ä–æ—Ñ–∏–ª—å - Moy-Den</title>
        <meta name="description" content="–¢–≤–æ–π –ª–∏—á–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–µ–¥–µ–Ω–∏—è –¥–Ω–µ–≤–Ω–∏–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è" />
      </Helmet>

      <div className="max-w-6xl mx-auto px-4 py-8">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          className="space-y-8"
        >
          <div className="text-center">
            <h1 className="text-4xl font-bold mb-4 bg-gradient-to-r from-purple-500 to-blue-500 bg-clip-text text-transparent">
              –¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å
            </h1>
            <p className="text-muted-foreground">
              –û—Ç—Å–ª–µ–∂–∏–≤–∞–π —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            </p>
          </div>

          <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
            <div className="lg:col-span-1">
              <Card className="p-6 glass-effect rounded-2xl">
                <div className="text-center">
                  <Avatar className="w-24 h-24 mx-auto mb-4">
                    <div className="w-full h-full bg-gradient-to-r from-purple-400 to-blue-400 flex items-center justify-center text-white text-4xl font-bold">
                      {currentUser.name.charAt(0).toUpperCase()}
                    </div>
                  </Avatar>
                  <h2 className="text-2xl font-bold mb-2">{currentUser.name}</h2>
                  <p className="text-muted-foreground mb-4">{currentUser.email}</p>
                  
                  <div className="space-y-2 mb-6 text-left">
                    <div className="flex items-center justify-between">
                      <span className="text-sm text-muted-foreground">–ó–∞–ø–∏—Å–µ–π –≤ –¥–Ω–µ–≤–Ω–∏–∫–µ:</span>
                      <span className="font-semibold">{totalEntries}</span>
                    </div>
                    <div className="flex items-center justify-between">
                      <span className="text-sm text-muted-foreground">–°—Ä–µ–¥–Ω–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ:</span>
                      <span className="font-semibold">{averageMood}/10</span>
                    </div>
                    <div className="flex items-center justify-between">
                      <span className="text-sm text-muted-foreground">–î–Ω–µ–π —Å –Ω–∞–º–∏:</span>
                      <span className="font-semibold">
                        {Math.ceil((new Date() - new Date(currentUser.joinDate)) / (1000 * 60 * 60 * 24))}
                      </span>
                    </div>
                  </div>

                  <div className="space-y-2">
                    <Button 
                      variant="outline" 
                      className="w-full rounded-full"
                      onClick={() => handleFeatureClick('settings')}
                    >
                      <Settings className="w-4 h-4 mr-2" />
                      –ù–∞—Å—Ç—Ä–æ–π–∫–∏
                    </Button>
                    <Button 
                      variant="outline" 
                      onClick={handleLogout}
                      className="w-full rounded-full"
                    >
                      <LogOut className="w-4 h-4 mr-2" />
                      –í—ã–π—Ç–∏
                    </Button>
                  </div>
                </div>
              </Card>
            </div>

            <div className="lg:col-span-2 space-y-6">
              <Card className="p-6 glass-effect rounded-2xl">
                <h3 className="text-xl font-semibold mb-4 flex items-center">
                  <TrendingUp className="w-5 h-5 mr-2" />
                  –ì—Ä–∞—Ñ–∏–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
                </h3>
                <MoodChart />
              </Card>

              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <Card className="p-6 glass-effect rounded-2xl">
                  <h3 className="text-lg font-semibold mb-4 flex items-center">
                    <Calendar className="w-5 h-5 mr-2" />
                    –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏
                  </h3>
                  <div className="space-y-3">
                    {userEntries.slice(0, 3).map((entry) => (
                      <div key={entry.id} className="border-l-4 border-primary pl-4 py-1">
                        <div className="flex justify-between items-center">
                          <span className="text-sm text-muted-foreground">
                            {new Date(entry.date).toLocaleDateString('ru-RU')}
                          </span>
                          <span className="font-semibold">
                            –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: {entry.mood[0]}/10
                          </span>
                        </div>
                        {entry.thought && (
                          <p className="text-sm mt-1 truncate">
                            {entry.thought.substring(0, 50)}...
                          </p>
                        )}
                      </div>
                    ))}
                    {userEntries.length === 0 && (
                      <p className="text-muted-foreground text-center py-4">
                        –ü–æ–∫–∞ –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π –≤ –¥–Ω–µ–≤–Ω–∏–∫–µ
                      </p>
                    )}
                  </div>
                </Card>

                <Card className="p-6 glass-effect rounded-2xl">
                  <h3 className="text-lg font-semibold mb-4">–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è üèÜ</h3>
                  <div className="space-y-3">
                    <div className="flex items-center justify-between p-3 bg-muted/50 rounded-lg">
                      <div>
                        <p className="font-medium">–ü–µ—Ä–≤–∞—è –∑–∞–ø–∏—Å—å</p>
                        <p className="text-sm text-muted-foreground">–°–¥–µ–ª–∞–ª –ø–µ—Ä–≤—É—é –∑–∞–ø–∏—Å—å</p>
                      </div>
                      <span className="text-2xl">‚ú®</span>
                    </div>
                    
                    {totalEntries >= 7 ? (
                      <div className="flex items-center justify-between p-3 bg-muted/50 rounded-lg">
                        <div>
                          <p className="font-medium">–ù–µ–¥–µ–ª—è –∑–∞–ø–∏—Å–µ–π</p>
                          <p className="text-sm text-muted-foreground">7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥</p>
                        </div>
                        <span className="text-2xl">üî•</span>
                      </div>
                    ) : (
                       <div className="flex items-center justify-between p-3 bg-muted/50 rounded-lg opacity-50">
                        <div>
                          <p className="font-medium">–ù–µ–¥–µ–ª—è –∑–∞–ø–∏—Å–µ–π</p>
                          <p className="text-sm text-muted-foreground">7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥</p>
                        </div>
                        <span className="text-2xl">üîí</span>
                      </div>
                    )}
                  </div>
                </Card>
              </div>
            </div>
          </div>
        </motion.div>
      </div>
    </div>
  );
};

export default Profile;